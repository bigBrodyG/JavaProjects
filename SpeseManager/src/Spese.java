/**
 * La classe {@code Spese} rappresenta una singola spesa con attributi relativi alla data,
 * importo, categoria e metodo di pagamento.
 * <p>
 * Fornisce costruttori per creare oggetti {@code Spese} con o senza data, metodi getter e setter
 * per ciascun attributo, e un metodo per applicare l'IVA all'importo.
 * </p>
 * <p>Esempio d'uso:</p>
 * <pre>
 *     Spese spesa = new Spese("Alimentari", "2024-06-01", 100, "Carta");
 *     double totaleConIva = spesa.applicaIva();
 * </pre>
 *
 * @author giordii.dev
 */
public class Spese {
    private String LocalDate;
    private double Moneyyy;
    private String Category;
    private String PayMethod;

    /**
     * Costruttore completo per l'inizializzazione completa degli oggetti.
     * @param LocalDate viene parsato per il controllo della validit√† della data
     */
    public Spese(String Category, String LocalDate, double Moneyyy, String PayMethod) {
        this.Category = Category;
        
        if (LocalDate != null && !LocalDate.isEmpty()) {
            try {
                java.time.LocalDate.parse(LocalDate);
                this.LocalDate = LocalDate;
            } catch (Exception e) {
                this.LocalDate = null;
            }
        } else {
            this.LocalDate = null;
        }
        this.Moneyyy = Moneyyy;
        this.PayMethod = PayMethod;
    }


    /**
     * Costruttore senza Date per spese incognite
     * @hidden per i soldi in nero :|
     */
    public Spese(String Category, double Moneyyy, String PayMethod) {
        this.Category = Category;
        this.Moneyyy = Moneyyy;
        this.PayMethod = PayMethod;
    }

    // getter e setter
    public void setMoneyyy(double Moneyyy) {
        this.Moneyyy = Moneyyy;
    }

    public void setCategory(String Category) {
        this.Category = Category;
    }

    public void setPayMethod(String PayMethod) {
        this.PayMethod = PayMethod;
    }

    public String getLocalDate() {
        return LocalDate;
    }

    public double getMoneyyy() {
        return Moneyyy;
    }

    public String getCategory() {
        return Category;
    }

    public String getPayMethod() {
        return PayMethod;
    }

    // tostring autogenerated
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Spese{");
        sb.append("LocalDate=").append(LocalDate);
        sb.append(", Moneyyy=").append(Moneyyy);
        sb.append(", Category=").append(Category);
        sb.append(", PayMethod=").append(PayMethod);
        sb.append('}');
        return sb.toString();
    }

    /**
     * Metodo per applcare l'iva alle spese con scontrino
     * @return Spesa+iva 22%
     */
    public double applicaIva() {
        return this.Moneyyy * 1.22;
    }
}